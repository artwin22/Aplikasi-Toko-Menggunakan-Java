/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package relasi;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tugasbesar.halamanutama;
import tugasbesar.koneksi;

/**
 *
 * @author Kuroko
 */
public class riwayat extends javax.swing.JFrame {

    private DefaultTableModel model;
    /**
     * Creates new form riwayat
     */
    public riwayat() {
        initComponents();
        setLocationRelativeTo(null);
        model = new DefaultTableModel();
        tabel.setModel(model);
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Jumlah Barang");
        model.addColumn("Harga Jual Barang");
        loadData();
    }

    public void loadData(){
    model.getDataVector().removeAllElements();
    model.fireTableDataChanged();
    
    try{
        Statement stat = (Statement)koneksi.getKoneksi().createStatement();
        String sql = "Select * From barang";
        ResultSet res = stat.executeQuery(sql);
        
        while(res.next()){
            Object[] obj = new Object[4];
            obj[0] = res.getString("id_barang");
            obj[1] = res.getString("nama_barang");
            obj[2] = res.getString("jumlah_barang");
            obj[3] = res.getString("harga_jual_barang");
            
            model.addRow(obj);
        }
    }   catch (SQLException err) {
        JOptionPane.showMessageDialog(null, err.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        barangdikit = new javax.swing.JButton();
        barangbanyak = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        exit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        member = new javax.swing.JButton();
        supplai = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel8.setText("Dari kami, Oleh Kita, Untuk Semua");

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 11)); // NOI18N
        jLabel1.setText("Toko GADA - Institut Teknologi Sumatera");

        barangdikit.setText("Barang Dengan Jumlah Stok Terdikit");
        barangdikit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barangdikitActionPerformed(evt);
            }
        });

        barangbanyak.setText("Barang Dengan Jumlah Stok Terbanyak");
        barangbanyak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barangbanyakActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabel);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        member.setText("Member Yang Sering Belanja");
        member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberActionPerformed(evt);
            }
        });

        supplai.setText("Supplier Yang Sering Mensupplai");
        supplai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(back)
                                .addGap(18, 18, 18)
                                .addComponent(exit))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(barangdikit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(barangbanyak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(223, 223, 223)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(supplai, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(member, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(jLabel8)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(member, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(barangdikit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barangbanyak)
                    .addComponent(supplai))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(back))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        dispose();
        new halamanutama().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void barangdikitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barangdikitActionPerformed
        // TODO add your handling code here:
        
        model = new DefaultTableModel();
        tabel.setModel(model);
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Jumlah Barang");
        model.addColumn("ID Supplier");
        model.addColumn("Nama Supplier");
        model.addColumn("Kota Supplier");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try{
        Statement stat = (Statement)koneksi.getKoneksi().createStatement();
        String sql = "SELECT id_barang,nama_barang,jumlah_barang,barang.id_supplier,nama_supplier,kota FROM barang "
                + "JOIN supplier ON supplier.id_supplier=barang.id_supplier "
                + "GROUP BY id_barang HAVING jumlah_barang = ( SELECT MIN(jumlah_barang) FROM barang )";
        ResultSet res = stat.executeQuery(sql);
        
        while(res.next()){
            Object[] obj = new Object[6];
            obj[0] = res.getString("id_barang");
            obj[1] = res.getString("nama_barang");
            obj[2] = res.getString("jumlah_barang");
            obj[3] = res.getString("id_supplier");
            obj[4] = res.getString("nama_supplier");
            obj[5] = res.getString("kota");
            
            model.addRow(obj);
        }
    }   catch (SQLException err) {
        JOptionPane.showMessageDialog(null, err.getMessage());
    }
        
    }//GEN-LAST:event_barangdikitActionPerformed

    private void barangbanyakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barangbanyakActionPerformed
        // TODO add your handling code here:
        model = new DefaultTableModel();
        tabel.setModel(model);
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Jumlah Barang");
        model.addColumn("ID Supplier");
        model.addColumn("Nama Supplier");
        model.addColumn("Kota Supplier");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try{
        Statement stat = (Statement)koneksi.getKoneksi().createStatement();
        String sql = "SELECT id_barang,nama_barang,jumlah_barang,barang.id_supplier,nama_supplier,kota FROM barang "
                + "JOIN supplier ON supplier.id_supplier=barang.id_supplier "
                + "GROUP BY id_barang HAVING jumlah_barang = ( SELECT MAX(jumlah_barang) FROM barang )";
        ResultSet res = stat.executeQuery(sql);
        
        while(res.next()){
            Object[] obj = new Object[6];
            obj[0] = res.getString("id_barang");
            obj[1] = res.getString("nama_barang");
            obj[2] = res.getString("jumlah_barang");
            obj[3] = res.getString("id_supplier");
            obj[4] = res.getString("nama_supplier");
            obj[5] = res.getString("kota");
            
            model.addRow(obj);
        }
    }   catch (SQLException err) {
        JOptionPane.showMessageDialog(null, err.getMessage());
    }
    }//GEN-LAST:event_barangbanyakActionPerformed

    private void memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberActionPerformed
        // TODO add your handling code here:
        model = new DefaultTableModel();
        tabel.setModel(model);
        model.addColumn("ID Member");
        model.addColumn("Nama Member");
        model.addColumn("Jenis Kelamin");
        model.addColumn("No HP");
        model.addColumn("Belanja");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try{
        Statement stat = (Statement)koneksi.getKoneksi().createStatement();
        String sql = "SELECT melayani.id_member,nama_member,jk_member,no_hp, COUNT(melayani.id_member) AS 'jumlah' FROM melayani "
                + "JOIN member ON melayani.id_member=member.id_member "
                + "GROUP BY melayani.id_member HAVING jumlah = ( SELECT MAX(tabelbeli.beli) "
                + "FROM ( SELECT COUNT(id_member) AS 'beli' FROM melayani GROUP BY id_member) AS tabelbeli )";
        ResultSet res = stat.executeQuery(sql);
        
        while(res.next()){
            Object[] obj = new Object[5];
            obj[0] = res.getString("id_member");
            obj[1] = res.getString("nama_member");
            obj[2] = res.getString("jk_member");
            obj[3] = res.getString("no_hp");
            obj[4] = res.getString("jumlah");
            
            model.addRow(obj);
        }
    }   catch (SQLException err) {
        JOptionPane.showMessageDialog(null, err.getMessage());
    }
    }//GEN-LAST:event_memberActionPerformed

    private void supplaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplaiActionPerformed
        // TODO add your handling code here:
        model = new DefaultTableModel();
        tabel.setModel(model);
        model.addColumn("ID Supplier");
        model.addColumn("Nama Supplier");
        model.addColumn("Kota");
        model.addColumn("Supplai");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try{
        Statement stat = (Statement)koneksi.getKoneksi().createStatement();
        String sql = "SELECT mensupplai.id_supplier,nama_supplier,kota,COUNT(mensupplai.id_supplier) AS 'supplai' "
                + "FROM mensupplai JOIN supplier ON supplier.id_supplier = mensupplai.id_supplier "
                + "GROUP BY mensupplai.id_supplier HAVING supplai = ( SELECT MAX(tabelSub.jumlah) "
                + "FROM ( SELECT COUNT(id_supplier) AS 'jumlah' FROM mensupplai "
                + "GROUP BY id_supplier ) AS tabelSub )";
        ResultSet res = stat.executeQuery(sql);
        
        while(res.next()){
            Object[] obj = new Object[4];
            obj[0] = res.getString("id_supplier");
            obj[1] = res.getString("nama_supplier");
            obj[2] = res.getString("kota");
            obj[3] = res.getString("supplai");
            
            model.addRow(obj);
        }
    }   catch (SQLException err) {
        JOptionPane.showMessageDialog(null, err.getMessage());
    }
    }//GEN-LAST:event_supplaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(riwayat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(riwayat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(riwayat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(riwayat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new riwayat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton barangbanyak;
    private javax.swing.JButton barangdikit;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton member;
    private javax.swing.JButton supplai;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
